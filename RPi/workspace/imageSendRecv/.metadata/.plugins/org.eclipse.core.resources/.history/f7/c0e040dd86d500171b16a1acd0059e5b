//// Send.java
// Sends an image to the receiver.
// Taken from:
//     https://stackoverflow.com/questions/25086868/how-to-send-images-through-sockets-in-java
//
// 171101, 171103, 171129

package imageHandler;

//import java.net.ServerSocket;
import java.nio.ByteBuffer;

import javax.imageio.ImageIO;

import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.OutputStream;
import java.net.*;

import java.net.Inet4Address;
import java.net.UnknownHostException;

import com.digi.xbee.api.CellularDevice;
import com.digi.xbee.api.exceptions.XBeeException;
import com.digi.xbee.api.models.IPMessage;
import com.digi.xbee.api.models.IPProtocol;

import java.io.Console;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

class Send {

	static String serverName = "73.40.197.83";  // NY Cir router.
	//static String serverName = "10.0.0.39";  // NY Cir router.
	
    /* Constants */
    // TODO Replace with the serial port where your sender module is connected to.
    private static String TTY_PORT = "/dev/ttyUSB0";             // USB port to XBee Cellular kit.
    // TODO Replace with the baud rate of your sender module.  
    private static final int BAUD_RATE = 115200;	
    
    private static int SERVER_PORT = 8207;                 // Server's listen port.

    private static final IPProtocol PROTOCOL_TCP = IPProtocol.TCP;
    
    public static CellularDevice myDevice = null;  
    
    public static void main(String[] args) throws Exception {

    
        String inputImagePath = "/data/images/test.jpg";
        String outputImagePathThumb = "/data/images/test_thumb.jpg";
         
        String fileName = "Cam01_171030_180045.jpg";   // Filename sent with image.
        byte[] fileNameInBytes = new byte[64];  
        
        fileNameInBytes = fileName.getBytes();
        int fileNameLen = fileNameInBytes.length;
        
    	System.out.println("--Connecting to server side ...");
    	
        //Socket socket = new Socket(serverName, 8207);
        //socket.setSoTimeout(800);
    	//OutputStream outputStream = socket.getOutputStream();    
        
    	
    	System.out.format("\n-- tty Port to be used for ZigBee Cellular: '%s'\n", TTY_PORT);
        
    	try
    	{
        	myDevice = new CellularDevice (TTY_PORT, BAUD_RATE);
            myDevice.open();
            myDevice.setReceiveTimeout(2000);       // seconds.
            //myDevice.setParameter(parameter, parameterValue)
    	}
    	catch (XBeeException e) 
		{
		    System.out.println(" !! Error opening ZigBee cellular device: ");
		    e.printStackTrace();
		    System.exit(0);
		} 
    	
        
        // Send size of filename and then filename to receiver
        //
        byte[] sizeOfName = ByteBuffer.allocate(4).putInt(fileNameLen).array();
       // outputStream.write(sizeOfName);
       // outputStream.write(fileNameInBytes);
    
        System.out.format("Sending data to server:  ... \n");		            
        myDevice.sendIPData((Inet4Address) Inet4Address.getByName(serverName),
                SERVER_PORT, PROTOCOL_TCP, sizeOfName);
        myDevice.sendIPData((Inet4Address) Inet4Address.getByName(serverName),
                SERVER_PORT, PROTOCOL_TCP, fileNameInBytes);
        
        // resize to a fixed width (not proportional)
        int scaledWidth = 640;
        int scaledHeight = 480;
        //ImageResizer.resize(inputImagePath, outputImagePathThumb, scaledWidth, scaledHeight);
        ImageResizer.resize(inputImagePath, outputImagePathThumb, .2);

        // Read resized image file.
        BufferedImage image = ImageIO.read(new File(outputImagePathThumb));
        
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        ImageIO.write(image, "jpg", byteArrayOutputStream);

        int sizeByte = byteArrayOutputStream.size();       
        
        System.out.println("--Sending image to server side ...");
        // Send size of image to send
        //
        byte[] size = ByteBuffer.allocate(4).putInt(sizeByte).array();
        System.out.println("Send Image size: " + byteArrayOutputStream.size());
        //outputStream.write(size);
        myDevice.sendIPData((Inet4Address) Inet4Address.getByName(serverName),
                SERVER_PORT, PROTOCOL_TCP, size);
        // Send the image bytes.
        //
        int MAX_PACKET_SIZE = 1500;     // Max is 1500.
        ////byte[] bytesSend = byteArrayOutputStream.toByteArray();
        byte[] bytesSend = new byte[MAX_PACKET_SIZE];
        
        //outputStream.write(bytesSend, 0, bytesSend.length);      // All the bytes are here okay.
        myDevice.sendIPData((Inet4Address) Inet4Address.getByName(serverName),
                SERVER_PORT, PROTOCOL_TCP, bytesSend);
        Thread.sleep(10);
        //outputStream.flush();
        //System.out.println("Flushed: " + System.currentTimeMillis());

        //Thread.sleep(10);
        //System.out.println("Closing: " + System.currentTimeMillis());
        //socket.close();
    	System.out.println("--Done sending image");
    	if (myDevice != null) myDevice.close();
        System.out.println("\n---- End of BluJay Producer Client execution.");

    }
}