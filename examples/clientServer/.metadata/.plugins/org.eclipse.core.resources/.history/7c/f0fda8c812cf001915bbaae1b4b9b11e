#include <iostream>
#include <time.h>
#include <unistd.h>  // for sleep

#include "network/SocketClient.h"
using namespace std;
using namespace exploringRPi;

int main(int argc, char *argv[]){
   if(argc!=2){
      cout << "Incorrect usage: " << endl;
      cout << "   client server_name" << endl;
      return 2;
   }
   cout << "Starting RPi Client Example" << endl;
   SocketClient sc(argv[1], 54321);

   bool run = true;
   while (run == true)
   {
	   string commandStr("");
	   string rec("");
	   cout << "Connect to server." << endl;
	   int ret = sc.connectToServer();

	   bool connected;
	   if (ret == -1) connected = false; else connected = true;

	   while ( (commandStr != "STOP") && connected )
	   {
		   cout << "Enter command: ";
		   getline( cin, commandStr);

		   cout << "Sending [" << commandStr << "]" << endl;
		   sc.send(commandStr);

		   cout << "Waiting for response ..." << endl;

		   rec = "";
		   rec = sc.receive(1024);
		   cout << "Received [" << rec << "]" << endl;
	   }

	   cout << "Disconnect from server." << endl;
	   if (sc.connectToServer() ) sc.disconnectFromServer();
	   sleep(2);
   }

   cout << "End of RPi Client Example" << endl;
}
